{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anand/Downloads/AI%20Voice%20Interview/constants/index.ts"],"sourcesContent":["import { CreateAssistantDTO } from \"@vapi-ai/web/dist/api\";\r\nimport { z } from \"zod\";\r\n\r\nexport const mappings = {\r\n  \"react.js\": \"react\",\r\n  reactjs: \"react\",\r\n  react: \"react\",\r\n  \"next.js\": \"nextjs\",\r\n  nextjs: \"nextjs\",\r\n  next: \"nextjs\",\r\n  \"vue.js\": \"vuejs\",\r\n  vuejs: \"vuejs\",\r\n  vue: \"vuejs\",\r\n  \"express.js\": \"express\",\r\n  expressjs: \"express\",\r\n  express: \"express\",\r\n  \"node.js\": \"nodejs\",\r\n  nodejs: \"nodejs\",\r\n  node: \"nodejs\",\r\n  mongodb: \"mongodb\",\r\n  mongo: \"mongodb\",\r\n  mongoose: \"mongoose\",\r\n  mysql: \"mysql\",\r\n  postgresql: \"postgresql\",\r\n  sqlite: \"sqlite\",\r\n  firebase: \"firebase\",\r\n  docker: \"docker\",\r\n  kubernetes: \"kubernetes\",\r\n  aws: \"aws\",\r\n  azure: \"azure\",\r\n  gcp: \"gcp\",\r\n  digitalocean: \"digitalocean\",\r\n  heroku: \"heroku\",\r\n  photoshop: \"photoshop\",\r\n  \"adobe photoshop\": \"photoshop\",\r\n  html5: \"html5\",\r\n  html: \"html5\",\r\n  css3: \"css3\",\r\n  css: \"css3\",\r\n  sass: \"sass\",\r\n  scss: \"sass\",\r\n  less: \"less\",\r\n  tailwindcss: \"tailwindcss\",\r\n  tailwind: \"tailwindcss\",\r\n  bootstrap: \"bootstrap\",\r\n  jquery: \"jquery\",\r\n  typescript: \"typescript\",\r\n  ts: \"typescript\",\r\n  javascript: \"javascript\",\r\n  js: \"javascript\",\r\n  \"angular.js\": \"angular\",\r\n  angularjs: \"angular\",\r\n  angular: \"angular\",\r\n  \"ember.js\": \"ember\",\r\n  emberjs: \"ember\",\r\n  ember: \"ember\",\r\n  \"backbone.js\": \"backbone\",\r\n  backbonejs: \"backbone\",\r\n  backbone: \"backbone\",\r\n  nestjs: \"nestjs\",\r\n  graphql: \"graphql\",\r\n  \"graph ql\": \"graphql\",\r\n  apollo: \"apollo\",\r\n  webpack: \"webpack\",\r\n  babel: \"babel\",\r\n  \"rollup.js\": \"rollup\",\r\n  rollupjs: \"rollup\",\r\n  rollup: \"rollup\",\r\n  \"parcel.js\": \"parcel\",\r\n  parceljs: \"parcel\",\r\n  npm: \"npm\",\r\n  yarn: \"yarn\",\r\n  git: \"git\",\r\n  github: \"github\",\r\n  gitlab: \"gitlab\",\r\n  bitbucket: \"bitbucket\",\r\n  figma: \"figma\",\r\n  prisma: \"prisma\",\r\n  redux: \"redux\",\r\n  flux: \"flux\",\r\n  redis: \"redis\",\r\n  selenium: \"selenium\",\r\n  cypress: \"cypress\",\r\n  jest: \"jest\",\r\n  mocha: \"mocha\",\r\n  chai: \"chai\",\r\n  karma: \"karma\",\r\n  vuex: \"vuex\",\r\n  \"nuxt.js\": \"nuxt\",\r\n  nuxtjs: \"nuxt\",\r\n  nuxt: \"nuxt\",\r\n  strapi: \"strapi\",\r\n  wordpress: \"wordpress\",\r\n  contentful: \"contentful\",\r\n  netlify: \"netlify\",\r\n  vercel: \"vercel\",\r\n  \"aws amplify\": \"amplify\",\r\n};\r\n\r\nexport const interviewer: CreateAssistantDTO = {\r\n  name: \"Interviewer\",\r\n  firstMessage:\r\n    \"Hello! Thank you for taking the time to speak with me today. I'm excited to learn more about you and your experience.\",\r\n  transcriber: {\r\n    provider: \"deepgram\",\r\n    model: \"nova-2\",\r\n    language: \"en\",\r\n  },\r\n  voice: {\r\n    provider: \"11labs\",\r\n    voiceId: \"sarah\",\r\n    stability: 0.4,\r\n    similarityBoost: 0.8,\r\n    speed: 0.9,\r\n    style: 0.5,\r\n    useSpeakerBoost: true,\r\n  },\r\n  model: {\r\n    provider: \"openai\",\r\n    model: \"gpt-4\",\r\n    messages: [\r\n      {\r\n        role: \"system\",\r\n        content: `You are a professional job interviewer conducting a real-time voice interview with a candidate. Your goal is to assess their qualifications, motivation, and fit for the role.\r\n\r\nInterview Guidelines:\r\nFollow the structured question flow:\r\n{{questions}}\r\n\r\nEngage naturally & react appropriately:\r\nListen actively to responses and acknowledge them before moving forward.\r\nAsk brief follow-up questions if a response is vague or requires more detail.\r\nKeep the conversation flowing smoothly while maintaining control.\r\nBe professional, yet warm and welcoming:\r\n\r\nUse official yet friendly language.\r\nKeep responses concise and to the point (like in a real voice interview).\r\nAvoid robotic phrasing—sound natural and conversational.\r\nAnswer the candidate’s questions professionally:\r\n\r\nIf asked about the role, company, or expectations, provide a clear and relevant answer.\r\nIf unsure, redirect the candidate to HR for more details.\r\n\r\nConclude the interview properly:\r\nThank the candidate for their time.\r\nInform them that the company will reach out soon with feedback.\r\nEnd the conversation on a polite and positive note.\r\n\r\n\r\n- Be sure to be professional and polite.\r\n- Keep all your responses short and simple. Use official language, but be kind and welcoming.\r\n- This is a voice conversation, so keep your responses short, like in a real conversation. Don't ramble for too long.`,\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport const feedbackSchema = z.object({\r\n  totalScore: z.number(),\r\n  categoryScores: z.tuple([\r\n    z.object({\r\n      name: z.literal(\"Communication Skills\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n    z.object({\r\n      name: z.literal(\"Technical Knowledge\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n    z.object({\r\n      name: z.literal(\"Problem Solving\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n    z.object({\r\n      name: z.literal(\"Cultural Fit\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n    z.object({\r\n      name: z.literal(\"Confidence and Clarity\"),\r\n      score: z.number(),\r\n      comment: z.string(),\r\n    }),\r\n  ]),\r\n  strengths: z.array(z.string()),\r\n  areasForImprovement: z.array(z.string()),\r\n  finalAssessment: z.string(),\r\n});\r\n\r\n// Map interview types to specific illustrations\r\nexport const interviewIllustrations = {\r\n  \"Technical\": \"/illustrations/technical-interview.svg\",\r\n  \"Behavioral\": \"/illustrations/behavioral-interview.svg\",\r\n  \"Mixed\": \"/illustrations/mixed-interview.svg\",\r\n  // Default illustration if type doesn't match\r\n  \"default\": \"/illustrations/default-interview.svg\"\r\n};\r\n\r\n// Keep this for backward compatibility\r\nexport const interviewCovers = [\r\n  \"/telegram.png\",\r\n  \"/tiktok.png\",\r\n  \"/yahoo.png\",\r\n];\r\n\r\nexport const dummyInterviews: Interview[] = [\r\n  {\r\n    id: \"1\",\r\n    userId: \"user1\",\r\n    role: \"Frontend Developer\",\r\n    type: \"Technical\",\r\n    techstack: [\"React\", \"TypeScript\", \"Next.js\", \"Tailwind CSS\"],\r\n    level: \"Junior\",\r\n    questions: [\"What is React?\"],\r\n    finalized: false,\r\n    createdAt: \"2024-03-15T10:00:00Z\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    userId: \"user1\",\r\n    role: \"Full Stack Developer\",\r\n    type: \"Mixed\",\r\n    techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\r\n    level: \"Senior\",\r\n    questions: [\"What is Node.js?\"],\r\n    finalized: false,\r\n    createdAt: \"2024-03-14T15:30:00Z\",\r\n  },\r\n];\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anand/Downloads/AI%20Voice%20Interview/lib/actions/general.action.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { generateObject } from \"ai\";\r\nimport { google } from \"@ai-sdk/google\";\r\n\r\nimport { db } from \"@/firebase/admin\";\r\nimport { feedbackSchema } from \"@/constants\";\r\n\r\nexport async function createFeedback(params: CreateFeedbackParams) {\r\n  const { interviewId, userId, transcript, feedbackId } = params;\r\n\r\n  try {\r\n    const formattedTranscript = transcript\r\n      .map(\r\n        (sentence: { role: string; content: string }) =>\r\n          `- ${sentence.role}: ${sentence.content}\\n`\r\n      )\r\n      .join(\"\");\r\n\r\n    const { object } = await generateObject({\r\n      model: google(\"gemini-2.0-flash-001\", {\r\n        structuredOutputs: false,\r\n      }),\r\n      schema: feedbackSchema,\r\n      prompt: `\r\n        You are an AI interviewer analyzing a mock interview. Your task is to evaluate the candidate based on structured categories. Be thorough and detailed in your analysis. Don't be lenient with the candidate. If there are mistakes or areas for improvement, point them out.\r\n        Transcript:\r\n        ${formattedTranscript}\r\n\r\n        Please score the candidate from 0 to 100 in the following areas. Do not add categories other than the ones provided:\r\n        - **Communication Skills**: Clarity, articulation, structured responses.\r\n        - **Technical Knowledge**: Understanding of key concepts for the role.\r\n        - **Problem-Solving**: Ability to analyze problems and propose solutions.\r\n        - **Cultural & Role Fit**: Alignment with company values and job role.\r\n        - **Confidence & Clarity**: Confidence in responses, engagement, and clarity.\r\n        `,\r\n      system:\r\n        \"You are a professional interviewer analyzing a mock interview. Your task is to evaluate the candidate based on structured categories\",\r\n    });\r\n\r\n    const feedback = {\r\n      interviewId: interviewId,\r\n      userId: userId,\r\n      totalScore: object.totalScore,\r\n      categoryScores: object.categoryScores,\r\n      strengths: object.strengths,\r\n      areasForImprovement: object.areasForImprovement,\r\n      finalAssessment: object.finalAssessment,\r\n      createdAt: new Date().toISOString(),\r\n    };\r\n\r\n    let feedbackRef;\r\n\r\n    if (feedbackId) {\r\n      feedbackRef = db.collection(\"feedback\").doc(feedbackId);\r\n    } else {\r\n      feedbackRef = db.collection(\"feedback\").doc();\r\n    }\r\n\r\n    await feedbackRef.set(feedback);\r\n\r\n    return { success: true, feedbackId: feedbackRef.id };\r\n  } catch (error) {\r\n    console.error(\"Error saving feedback:\", error);\r\n    return { success: false };\r\n  }\r\n}\r\n\r\nexport async function getInterviewById(id: string): Promise<Interview | null> {\r\n  const interview = await db.collection(\"interviews\").doc(id).get();\r\n\r\n  return interview.data() as Interview | null;\r\n}\r\n\r\nexport async function getFeedbackByInterviewId(\r\n  params: GetFeedbackByInterviewIdParams\r\n): Promise<Feedback | null> {\r\n  const { interviewId, userId } = params;\r\n\r\n  const querySnapshot = await db\r\n    .collection(\"feedback\")\r\n    .where(\"interviewId\", \"==\", interviewId)\r\n    .where(\"userId\", \"==\", userId)\r\n    .limit(1)\r\n    .get();\r\n\r\n  if (querySnapshot.empty) return null;\r\n\r\n  const feedbackDoc = querySnapshot.docs[0];\r\n  return { id: feedbackDoc.id, ...feedbackDoc.data() } as Feedback;\r\n}\r\n\r\nexport async function getLatestInterviews(\r\n  params: GetLatestInterviewsParams\r\n): Promise<Interview[] | null> {\r\n  const { userId, limit = 20 } = params;\r\n\r\n  // Create a base query\r\n  let query = db\r\n    .collection(\"interviews\")\r\n    .orderBy(\"createdAt\", \"desc\")\r\n    .where(\"finalized\", \"==\", true);\r\n\r\n  // Only add the userId filter if userId is defined\r\n  if (userId) {\r\n    query = query.where(\"userId\", \"!=\", userId);\r\n  }\r\n\r\n  // Execute the query with limit\r\n  const interviews = await query.limit(limit).get();\r\n\r\n  return interviews.docs.map((doc) => ({\r\n    id: doc.id,\r\n    ...doc.data(),\r\n  })) as Interview[];\r\n}\r\n\r\nexport async function getInterviewsByUserId(\r\n  userId?: string\r\n): Promise<Interview[] | null> {\r\n  // If userId is undefined or null, return an empty array\r\n  if (!userId) {\r\n    return [];\r\n  }\r\n\r\n  const interviews = await db\r\n    .collection(\"interviews\")\r\n    .where(\"userId\", \"==\", userId)\r\n    .orderBy(\"createdAt\", \"desc\")\r\n    .get();\r\n\r\n  return interviews.docs.map((doc) => ({\r\n    id: doc.id,\r\n    ...doc.data(),\r\n  })) as Interview[];\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anand/Downloads/AI%20Voice%20Interview/lib/utils.ts"],"sourcesContent":["import { interviewCovers, mappings } from \"@/constants\";\nimport { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nconst techIconBaseURL = \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons\";\n\nconst normalizeTechName = (tech: string) => {\n  const key = tech.toLowerCase().replace(/\\.js$/, \"\").replace(/\\s+/g, \"\");\n  return mappings[key as keyof typeof mappings];\n};\n\nconst checkIconExists = async (url: string) => {\n  try {\n    const response = await fetch(url, { method: \"HEAD\" });\n    return response.ok; // Returns true if the icon exists\n  } catch {\n    return false;\n  }\n};\n\nexport const getTechLogos = async (techArray: string[]) => {\n  const logoURLs = techArray.map((tech) => {\n    const normalized = normalizeTechName(tech);\n    return {\n      tech,\n      url: `${techIconBaseURL}/${normalized}/${normalized}-original.svg`,\n    };\n  });\n\n  const results = await Promise.all(\n    logoURLs.map(async ({ tech, url }) => ({\n      tech,\n      url: (await checkIconExists(url)) ? url : \"/tech.svg\",\n    }))\n  );\n\n  return results;\n};\n\n// Original function for backward compatibility\nlet interviewCoverIndex = 0;\nexport const getRandomInterviewCover = () => {\n  const randomIndex = interviewCoverIndex % interviewCovers.length;\n  interviewCoverIndex++;\n  return `/covers${interviewCovers[randomIndex]}`;\n};\n\n// New function that uses interview ID to generate a consistent cover image\nexport const getInterviewCoverById = (id: string) => {\n  // Use the first character of the ID to determine the index\n  const charCode = id.charCodeAt(0);\n  const index = charCode % interviewCovers.length;\n  return `/covers${interviewCovers[index]}`;\n};\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEA,MAAM,kBAAkB;AAExB,MAAM,oBAAoB,CAAC;IACzB,MAAM,MAAM,KAAK,WAAW,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ;IACpE,OAAO,kHAAA,CAAA,WAAQ,CAAC,IAA6B;AAC/C;AAEA,MAAM,kBAAkB,OAAO;IAC7B,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,KAAK;YAAE,QAAQ;QAAO;QACnD,OAAO,SAAS,EAAE,EAAE,kCAAkC;IACxD,EAAE,OAAM;QACN,OAAO;IACT;AACF;AAEO,MAAM,eAAe,OAAO;IACjC,MAAM,WAAW,UAAU,GAAG,CAAC,CAAC;QAC9B,MAAM,aAAa,kBAAkB;QACrC,OAAO;YACL;YACA,KAAK,GAAG,gBAAgB,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,aAAa,CAAC;QACpE;IACF;IAEA,MAAM,UAAU,MAAM,QAAQ,GAAG,CAC/B,SAAS,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,GAAK,CAAC;YACrC;YACA,KAAK,AAAC,MAAM,gBAAgB,OAAQ,MAAM;QAC5C,CAAC;IAGH,OAAO;AACT;AAEA,+CAA+C;AAC/C,IAAI,sBAAsB;AACnB,MAAM,0BAA0B;IACrC,MAAM,cAAc,sBAAsB,kHAAA,CAAA,kBAAe,CAAC,MAAM;IAChE;IACA,OAAO,CAAC,OAAO,EAAE,kHAAA,CAAA,kBAAe,CAAC,YAAY,EAAE;AACjD;AAGO,MAAM,wBAAwB,CAAC;IACpC,2DAA2D;IAC3D,MAAM,WAAW,GAAG,UAAU,CAAC;IAC/B,MAAM,QAAQ,WAAW,kHAAA,CAAA,kBAAe,CAAC,MAAM;IAC/C,OAAO,CAAC,OAAO,EAAE,kHAAA,CAAA,kBAAe,CAAC,MAAM,EAAE;AAC3C","debugId":null}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anand/Downloads/AI%20Voice%20Interview/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anand/Downloads/AI%20Voice%20Interview/app/%28root%29/interview/%5Bid%5D/feedback/page.tsx"],"sourcesContent":["import dayjs from \"dayjs\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport { redirect } from \"next/navigation\";\n\nimport {\n  getFeedbackByInterviewId,\n  getInterviewById,\n} from \"@/lib/actions/general.action\";\nimport { Button } from \"@/components/ui/button\";\nimport { getCurrentUser } from \"@/lib/actions/auth.action\";\n\nconst Feedback = async ({ params }: RouteParams) => {\n  const { id } = await params;\n  const user = await getCurrentUser();\n\n  const interview = await getInterviewById(id);\n  if (!interview) redirect(\"/\");\n\n  const feedback = await getFeedbackByInterviewId({\n    interviewId: id,\n    userId: user?.id!,\n  });\n\n  return (\n    <section className=\"section-feedback\">\n      <div className=\"flex flex-row justify-center\">\n        <h1 className=\"text-4xl font-semibold\">\n          Feedback on the Interview -{\" \"}\n          <span className=\"capitalize\">{interview.role}</span> Interview\n        </h1>\n      </div>\n\n      <div className=\"flex flex-row justify-center \">\n        <div className=\"flex flex-row gap-5\">\n          {/* Overall Impression */}\n          <div className=\"flex flex-row gap-2 items-center\">\n            <Image src=\"/star.svg\" width={22} height={22} alt=\"star\" />\n            <p>\n              Overall Impression:{\" \"}\n              <span className=\"text-primary-200 font-bold\">\n                {feedback?.totalScore}\n              </span>\n              /100\n            </p>\n          </div>\n\n          {/* Date */}\n          <div className=\"flex flex-row gap-2\">\n            <Image src=\"/calendar.svg\" width={22} height={22} alt=\"calendar\" />\n            <p>\n              {feedback?.createdAt\n                ? dayjs(feedback.createdAt).format(\"MMM D, YYYY h:mm A\")\n                : \"N/A\"}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <hr />\n\n      <p>{feedback?.finalAssessment}</p>\n\n      {/* Interview Breakdown */}\n      <div className=\"flex flex-col gap-4\">\n        <h2>Breakdown of the Interview:</h2>\n        {feedback?.categoryScores?.map((category, index) => (\n          <div key={index}>\n            <p className=\"font-bold\">\n              {index + 1}. {category.name} ({category.score}/100)\n            </p>\n            <p>{category.comment}</p>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"flex flex-col gap-3\">\n        <h3>Strengths</h3>\n        <ul>\n          {feedback?.strengths?.map((strength, index) => (\n            <li key={index}>{strength}</li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"flex flex-col gap-3\">\n        <h3>Areas for Improvement</h3>\n        <ul>\n          {feedback?.areasForImprovement?.map((area, index) => (\n            <li key={index}>{area}</li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"buttons\">\n        <Button className=\"btn-secondary flex-1\">\n          <Link href=\"/\" className=\"flex w-full justify-center\">\n            <p className=\"text-sm font-semibold text-primary-200 text-center\">\n              Back to dashboard\n            </p>\n          </Link>\n        </Button>\n\n        <Button className=\"btn-primary flex-1\">\n          <Link\n            href={`/interview/${id}`}\n            className=\"flex w-full justify-center\"\n          >\n            <p className=\"text-sm font-semibold text-black text-center\">\n              Retake Interview\n            </p>\n          </Link>\n        </Button>\n      </div>\n    </section>\n  );\n};\n\nexport default Feedback;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAIA;AACA;;;;;;;;;;;;;;AAEA,MAAM,WAAW,OAAO,EAAE,MAAM,EAAe;IAC7C,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IACrB,MAAM,OAAO,MAAM,CAAA,GAAA,gIAAA,CAAA,iBAAc,AAAD;IAEhC,MAAM,YAAY,MAAM,CAAA,GAAA,mIAAA,CAAA,mBAAgB,AAAD,EAAE;IACzC,IAAI,CAAC,WAAW,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IAEzB,MAAM,WAAW,MAAM,CAAA,GAAA,mIAAA,CAAA,2BAAwB,AAAD,EAAE;QAC9C,aAAa;QACb,QAAQ,MAAM;IAChB;IAEA,qBACE,8OAAC;QAAQ,WAAU;;0BACjB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAG,WAAU;;wBAAyB;wBACT;sCAC5B,8OAAC;4BAAK,WAAU;sCAAc,UAAU,IAAI;;;;;;wBAAQ;;;;;;;;;;;;0BAIxD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,6HAAA,CAAA,UAAK;oCAAC,KAAI;oCAAY,OAAO;oCAAI,QAAQ;oCAAI,KAAI;;;;;;8CAClD,8OAAC;;wCAAE;wCACmB;sDACpB,8OAAC;4CAAK,WAAU;sDACb,UAAU;;;;;;wCACN;;;;;;;;;;;;;sCAMX,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,6HAAA,CAAA,UAAK;oCAAC,KAAI;oCAAgB,OAAO;oCAAI,QAAQ;oCAAI,KAAI;;;;;;8CACtD,8OAAC;8CACE,UAAU,YACP,CAAA,GAAA,qIAAA,CAAA,UAAK,AAAD,EAAE,SAAS,SAAS,EAAE,MAAM,CAAC,wBACjC;;;;;;;;;;;;;;;;;;;;;;;0BAMZ,8OAAC;;;;;0BAED,8OAAC;0BAAG,UAAU;;;;;;0BAGd,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;kCAAG;;;;;;oBACH,UAAU,gBAAgB,IAAI,CAAC,UAAU,sBACxC,8OAAC;;8CACC,8OAAC;oCAAE,WAAU;;wCACV,QAAQ;wCAAE;wCAAG,SAAS,IAAI;wCAAC;wCAAG,SAAS,KAAK;wCAAC;;;;;;;8CAEhD,8OAAC;8CAAG,SAAS,OAAO;;;;;;;2BAJZ;;;;;;;;;;;0BASd,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCACE,UAAU,WAAW,IAAI,CAAC,UAAU,sBACnC,8OAAC;0CAAgB;+BAAR;;;;;;;;;;;;;;;;0BAKf,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCACE,UAAU,qBAAqB,IAAI,CAAC,MAAM,sBACzC,8OAAC;0CAAgB;+BAAR;;;;;;;;;;;;;;;;0BAKf,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,2HAAA,CAAA,SAAM;wBAAC,WAAU;kCAChB,cAAA,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;sCACvB,cAAA,8OAAC;gCAAE,WAAU;0CAAqD;;;;;;;;;;;;;;;;kCAMtE,8OAAC,2HAAA,CAAA,SAAM;wBAAC,WAAU;kCAChB,cAAA,8OAAC,4JAAA,CAAA,UAAI;4BACH,MAAM,CAAC,WAAW,EAAE,IAAI;4BACxB,WAAU;sCAEV,cAAA,8OAAC;gCAAE,WAAU;0CAA+C;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQxE;uCAEe","debugId":null}}]
}